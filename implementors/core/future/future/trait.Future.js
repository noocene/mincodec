(function() {var implementors = {};
implementors["mincodec"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"mincodec/trait.MinCodecRead.html\" title=\"trait mincodec::MinCodecRead\">MinCodecRead</a>, B:&nbsp;BitBuf&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"mincodec/struct.ReadImmediate.html\" title=\"struct mincodec::ReadImmediate\">ReadImmediate</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"mincodec/trait.MinCodecRead.html#associatedtype.Deserialize\" title=\"type mincodec::MinCodecRead::Deserialize\">Deserialize</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["mincodec::ReadImmediate"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"mincodec/trait.MinCodecWrite.html\" title=\"trait mincodec::MinCodecWrite\">MinCodecWrite</a>, B:&nbsp;BitBufMut&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"mincodec/struct.WriteImmediate.html\" title=\"struct mincodec::WriteImmediate\">WriteImmediate</a>&lt;T, B&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T::<a class=\"type\" href=\"mincodec/trait.MinCodecWrite.html#associatedtype.Serialize\" title=\"type mincodec::MinCodecWrite::Serialize\">Serialize</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;B: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["mincodec::WriteImmediate"]},{"text":"impl&lt;T:&nbsp;AsyncRead + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>, U:&nbsp;<a class=\"trait\" href=\"mincodec/trait.MinCodecRead.html\" title=\"trait mincodec::MinCodecRead\">MinCodecRead</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"mincodec/struct.AsyncReader.html\" title=\"struct mincodec::AsyncReader\">AsyncReader</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"type\" href=\"mincodec/trait.MinCodecRead.html#associatedtype.Deserialize\" title=\"type mincodec::MinCodecRead::Deserialize\">Deserialize</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["mincodec::AsyncReader"]},{"text":"impl&lt;T:&nbsp;AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>, U:&nbsp;<a class=\"trait\" href=\"mincodec/trait.MinCodecWrite.html\" title=\"trait mincodec::MinCodecWrite\">MinCodecWrite</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a> for <a class=\"struct\" href=\"mincodec/struct.AsyncWriter.html\" title=\"struct mincodec::AsyncWriter\">AsyncWriter</a>&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;U::<a class=\"type\" href=\"mincodec/trait.MinCodecWrite.html#associatedtype.Serialize\" title=\"type mincodec::MinCodecWrite::Serialize\">Serialize</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,&nbsp;</span>","synthetic":false,"types":["mincodec::AsyncWriter"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()