initSidebarItems({"derive":[["MinCodec","Derives a highly compact `MinCodec` implementation for any struct or enum with fields that implement `MinCodec`"]],"enum":[["AsyncReaderError","Abstracts over errors that can occur in the `AsyncReader` adapter"],["AsyncWriterError","Abstracts over errors that can occur in the `AsyncWriter` adapter"],["BufPoll","Analogue of `core::task::Poll` with a special case for insufficent buffers"],["MapDeserializeError","An error wrapper for MapDeserialize"],["MapSerializeError","An error wrapper for MapSerialize"],["OptionDeserialize","Helper for deserializing a value and then storing it temporarily"],["ReadImmediateError","Wraps errors that can occur in the `ReadImmediate` adapter"],["WriteImmediateError","Wraps errors that can occur in the `WriteImmediate` adapter"]],"macro":[["buf_ok","Shorthand for `BufPoll::Ready(Ok())`"],["buf_ready","Equivalent of `futures::ready` for `BufPoll`"],["buf_try","Equivalent of `?` for `BufPoll` functions"],["sufficient","Converts a `Result<T, Insufficient>` from `bitbuf` into a `BufPoll` and returns early on `Insufficient`"]],"mod":[["allocated","Utility types employed by `MinCodec` implementations for heap-allocated structures"],["array","Provides codecs for fixed-size arrays"],["empty","Provides a codec for empty/bottom types"],["option","Provides a codec for the `Option` type"],["primitive","Provides codecs for primitive/builtin types"],["result","Provides a codec for the `Result` type"],["tuple","Provides codecs for tuples"]],"struct":[["AsyncReader","Helper for deserializing a `MinCodecRead` type from a `core_futures_io::AsyncRead` bytestream"],["AsyncWriter","Helper for serializing a `MinCodecWrite` type into a `core_futures_io::AsyncWrite` bytestream"],["Incomplete","Error returned when attempting to reset an incomplete streaming wrapper"],["MapDeserialize","Mapped deserialize using a translation function"],["MapSerialize","Mapped serializer using a translation function"],["ReadImmediate","An adapter that reads a value from a fixed buffer"],["WriteImmediate","An adapter that writes a value into a fixed buffer, failing if the buffer is too small"]],"trait":[["Deserialize","Describes the manner in which a type is deserialized from a bit-level buffer"],["MinCodec","Blanket-implemented alias trait that constrains on `MinCodecRead` and `MinCodecWrite`"],["MinCodecRead","A type with an associated bit-level deserialization system"],["MinCodecReadExt","Provides utility methods for `MinCodecRead` types"],["MinCodecWrite","A type with an associated bit-level serialization scheme"],["MinCodecWriteExt","Provides utility methods for `MinCodecWrite` types"],["Serialize","Describes the manner in which a type is serialized into a bit-level buffer"]]});